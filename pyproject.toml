[tool.poetry]
name = "medminer"
description = "Project to use LLM agents for text analysis in the medical field"
version = "1.0.0"
license = "MIT"
authors = ["AIDH MS"]
readme = "README.md"
homepage = "https://github.com/aidh-ms/MedMiner"
repository = "https://github.com/aidh-ms/MedMiner"
documentation = "https://github.com/aidh-ms/MedMiner"
keywords = ["llm", "agents", "ai", "ml", "medical"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.urls]
Changelog = "https://github.com/aidh-ms/MedMiner/releases"
Bugtracker = "https://github.com/aidh-ms/MedMiner/issues"

[tool.poetry.dependencies]
python = "^3.12"
smolagents = {extras = ["transformers"], version = "^1.18.0"}
httpx = "^0.28.1"
torch = "^2.2.0"
gradio = "^5.34.1"
pandas = "^2.3.0"
pandas-stubs = "^2.2.3.250527"
pre-commit = "^4.2.0"

[tool.poetry.group.openai.dependencies]
openai = "^1.88.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.16.1"
pytest = "^8.4.1"
coverage = "^7.9.1"
pytest-cov = "^6.2.1"
ruff = "^0.12.0"
pytest-asyncio = "^1.0.0"
pytest-recording = "^0.13.4"
pytest-random-order = "^1.1.1"
jupyter = "^1.1.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.14"
pymdown-extensions = "^10.15"
mkdocstrings-python = "^1.16.12"
mkdocs-macros-plugin = "^1.3.7"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.2"
mkdocs-section-index = "^0.3.10"
mkdocs-jupyter = "^0.25.1"
jupyter = "^1.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["smolagents.*", "transformers.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py"]
filterwarnings = ["ignore::DeprecationWarning"]
asyncio_mode = "auto"
addopts = [
    "--cov",
    "--cov-branch",
    "--cov=src",
    "--cov-report=xml",
    "--import-mode=importlib",
    "--random-order",
]
